import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the compareTriplets function below.
    static List<Integer> compareTriplets(List<Integer> a, List<Integer> b) {
        
        int aScore = 0;
        int bScore = 0;

        for (int i = 0; i < a.size(); i++) {
            if (a.get(i) > b.get(i)) {
                aScore += 1;
            } else if (a.get(i) < b.get(i)) {
                bScore += 1;
            }
        }

        final int aS = aScore;
        final int bS = bScore;

        List<Integer> scores = new ArrayList<Integer>() {{ 
            add(aS); 
            add(bS); 
            } }; 
        
        return scores;
    }

    //Inputs for a and b go here
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> b = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

	//a and b inputs go to compareTriplets method
        List<Integer> result = compareTriplets(a, b);

	//Output
        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}

Andy and Barry took three tests. Compare their scores.
If a[i] > b[i], Andy gets a point.
If a[i] < b[i], Barry gets a point.
If a[i] == b[i], neither gets a point.

Tally up the points, put them into an ArrayList (scores),
and return the ArrayList.

Sample Input:

17 28 30
99 16 8

Sample Output:

2 1